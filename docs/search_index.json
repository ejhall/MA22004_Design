[
["index.html", "MA22004 Course Design Plan 1 Learning Asynchronous content Synchronous content", " MA22004 Course Design Plan Dr Eric Hall (ehall001@dundee.ac.uk) 2020-07-16 1 Learning Wir shaffen das. Summary: runs for 11 weeks (20 SCQF/10 ECTS) approx 200 hours student effort including 55 contact hours. There will be 1 seminars of one-hour each (timetabled, online), 1 workshop of one-hour (timetabled, face-to-face), and 1 lab of two hours (online, asynchronous). The expectation will be that students access and engage with the lecture notes and curated digital content before participating in the seminar. Asynchronous content All of this content will be available online. Course notes (ACQUIRING) needs to be prepared (use of existing hand-written notes with some modificaitons), this content will consist of HTML and PDF notes generated using Rmarkdown. Interactive computer labs (PRODUCING, PRACTICING) needs to be prepared (use of prepared labs with content converted to Rmarkdown and interactive elements added), this content will consist of interactive R computer labs coded using learnr and gradethis. Digital need: RStudio Cloud. Curated digital content (INQUIRING) a collection of digital content for students to explore, e.g., online lectures by David Spiegelhalter, Hans Rosling, etc; spurious correlations, Datasaurus Dozen, etc. Shared via Blackboard or padlet. Synchronous content This content must be timetabled. Face-to-face Workshops (PRACTICING, COLLABORATING, DISCUSSING) In which students will meet together to work in small groups (5 or 6). The first couple of meetings will involve meeting outdoors, e.g., UoD Botanical Gardens or a park, to collect data (circumference of trees, heights of people, number of people crossing at a busy intersection, etc) that will later be discussed an analyzed. The students will utilized worksheet handouts that are already prepared. Online Seminars (DISCUSSING, PRODUCING, PRACTICING) In which we will have a discussion of the main topics for the week, guided by student polling (using either mentimeter or itempool. Periodic quizzes will be given in seminars to assess student attainment. A portion of each seminar will involve a lab presentation given by one of the groups. Examinations (PRODUCING) Midterm and Final examinations will need to be timetabled to lessen the chance of cheating. The Final Examination can also be given during the May diet. "],
["engagement.html", "2 Engagement", " 2 Engagement The active learning categorization for each teaching task are identified in § Learning There are several points that can be measured to assess engagement, including: Students will be presented with a new collection of notes that will roll out weekly using a tool like perusall (or possibly Blackboard forums). They will be responsible for posting both questions and responses to the message boards for each new collection of notes. During seminars, students will be presented with polls to encourage reflection and discussion. During seminars, students will take turns giving a lab report presentation with their workshop groups. This will encourage students to challenge each others analysis. Students will be expected to hand-in assignments for continuous assessment. Students will be expected to sit Midterm examinations. The grades of these examinations will offer opportunities for intervention. "],
["attainment.html", "3 Attainment", " 3 Attainment "],
["assessment.html", "4 Assessment Examinations Assignments", " 4 Assessment The module assessment will be weighted: Assessment Weight Assignments 20% Midterm Exam 1 20% Midterm Exam 2 20% Final Exam 40% Note: This is a modification from the previous split (60% degree exam, 20% two class tests, and 20% coursework). As the students will not be given a revision period, the Final Exam will need to be less cumulative in scope and therefore additional weight will be placed on the Midterm Exams. Examinations The Final Exam will be a two-hour hand-written exam. Students will be given one additional hour to scan, code, and upload their manuscripts using gradescope. This process will be thoroughly discussed and practiced by the students with a dummy exam in advance of a real submission. The Final Exam will either be given in the last week of term (week 11) or during the May exam diet. The Midterm Exams will either be hand-written or computer-assessed and will be one-hour in scope instead of two. These will likely be held in week 4 and week 8. Assignments The assessed courwork will include 6 lab reports and 1 lab report presentation (group work). "],
["needs.html", "5 NEEDS Digital needs Hardware needs", " 5 NEEDS Digital needs bringing computer lab into cloud: semester subsription to RStudio Cloud1 (approx. 1000 USD) polling: mentimeter or itempool Hardware needs Better microphone Tablet with stylus A better long-term solution would be to run RStudio Server Pro and RStudio Connect on in-house server running, licenses are available for free for teaching purposes.↩︎ "],
["rmarkdown-example.html", "Rmarkdown Example Math Plots", " Rmarkdown Example Math Here is an example page containing math markdown. We can use inline math, $f_X$, $f_Y$, and $f_{X,Y}$, as well as display math, \\[ I(X;Y) = \\iint_{\\mathcal{X} \\otimes \\mathcal{Y}} \\log\\left( \\frac{f_{X,Y}(x,y)}{f_{X}(x)f_{Y}(y)} \\right) f_{X,Y}(x,y) \\mathrm{d}y \\mathrm{d}x\\,. \\] to generate: We can use inline math, \\(f_X\\), \\(f_Y\\), and \\(f_{X,Y}\\), as well as display math, \\[ I(X;Y) = \\iint_{\\mathcal{X} \\otimes \\mathcal{Y}} \\log\\left( \\frac{f_{X,Y}(x,y)}{f_{X}(x)f_{Y}(y)} \\right) f_{X,Y}(x,y) \\mathrm{d}y \\mathrm{d}x\\,. \\] Plots x &lt;- seq(-8, 8, length=1000) y0 &lt;- dnorm(x, -2, 1) y1 &lt;- dnorm(x, 2, 1) df &lt;- tibble(x, y0, y1) df &lt;- melt(df, id.var = &quot;x&quot;, value.name = &quot;y&quot;) ggplot(data = df, aes(x = x, color = variable)) + geom_line(aes(y=y)) Figure 5.1: Two normal variates with different means and same variance. Note this figure is a scalable vector graphic — from what I understand, this is better from an accessbility standpoint. The figure with caption caption is created by typing the code directly into the markdown document: ```{r normals-same-var, echo=TRUE, fig.cap=&quot;Two normal variates with different means and same variance. Note this figure is a scalable vector graphic --- from what I understand, this is better from an accessbility standpoint.&quot;} x &lt;- seq(-8, 8, length=1000) y0 &lt;- dnorm(x, -2, 1) y1 &lt;- dnorm(x, 2, 1) df &lt;- tibble(x, y0, y1) df &lt;- melt(df, id.var = &quot;x&quot;, value.name = &quot;y&quot;) ggplot(data = df, aes(x = x, color = variable)) + geom_line(aes(y=y)) ``` "]
]
